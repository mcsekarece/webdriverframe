package com.projectname.testutils.genericutility.testDataLib;

import java.util.Hashtable;
import java.lang.reflect.*;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.testng.Assert;

import com.projectname.testutils.genericutility.ReadFromExcel;


/**
 * HomeLib
 * This Class will contain reusable functions which can be used in Nexia Interface
<<<<<<< HEAD
 * @category 	Charts
=======
 * @Category 	Home
>>>>>>> Aspire/master
 * @since  	     Apr 04, 2010
 */
public class HomeLib {
	public String testCaseId = null;
	public String userAccount = null;
	public String userName = null;
	public String userPassword = null;
	public String patientId = null;
	public String anotherPatientId = null;
	public String anotherPractice = null;
	public String memberId = null;
	public String relationAddr1 = null;
	public String relationAddr2 = null;
	public String secondaryReason = null;
	public String exceptionCode = null;
	public String sequenceId = null;
	
	public String patientHearabout=null;
	public String patientProvider=null;
	public String patientProgram=null;
	public String patientReferraldate=null;
	public String canadianProvince=null;
	public String expireDate=null;
	public String hCN=null;
	public String patientIdchart = null;
	public String idchart=null;
	public String rosteredCheck = null;
	public String primaryLocation=null;
	public String responsibleProvider = null;
	public String pcpCheck = null;
	public String lastName = null;
	public String firstName = null;	
	public String middleName=null;
	public String title=null;
	public String suffix = null;
	public String alias1=null;
	public String alias2=null;
	public String dob=null;
	public String dobCa=null;
	public String estimatedCheck=null;
	public String prematureCheck=null;
	public String duration=null;
	public String measure=null;
	public String sex=null;
	public String newBornCheck = null;
	public String maritalStatus = null;
	public String status=null;
	public String statusDate=null;
	public String reasonForInactivation=null;	
	public String residentialAddrStreet1=null;
	public String residentialAddrStreet2=null;
	public String residentialAddrcity=null;
	public String residentialAddrstate=null;
	public String residentialAddrstateCA=null;
	public String residentialAddrcity1=null;
	public String residentialAddrstate1=null;
	public String residentialAddrzipCode=null;
	public String residentialAddrzipCodeCA=null;
	public String residentialAddrcountry = null;
	public String residentialAddrcountryCA = null;
	public String county = null;
	public String telephoneType1 = null;
	public String telephoneNo1=null;	
	public String telephoneextnNo1=null;
	public String telephoneType2 = null;
	public String telephoneNo2=null;	
	public String telephoneextnNo2=null;
	public String telephoneType3 = null;
	public String telephoneNo3=null;	
	public String telephoneextnNo3=null;
	public String telephoneType4 = null;
	public String telephoneNo4=null;	
	public String teleno4=null;
	public String telephoneextnNo4=null;
	public String teleNo1=null;
	public String teleNo2=null;
	public String teleNo3=null;
	public String teleNo4=null;
	public String email=null;	
	public String contactPreferences=null;
	public String contactPreferences1=null;
	public String contactPreferences2=null;
	public String contactPreferences3=null;
	public String contactPreferences4=null;
	public String sameAsResidentialAddressCheck=null;
	public String mailingAddressStreet1=null;
	public String mailingAddressStreet2=null;
	public String mailingAddressCity=null;
	public String mailingAddressState=null;
	public String mailingAddressCity1=null;
	public String mailingAddressState1=null;
	public String mailingAddressZipcode=null;
	public String mailingAddressCountry = null;
	public String mailingAddressCounty=null;
	public String patientID=null;
	public String CAPatientID=null;
	public String comments=null;
	public String languageSpoken = null;
	public String secondlanguagespoken = null;

	public String contactType=null;
	public String relationship=null;
	public String country=null;
	public String householdName=null;
	
	public String consentType = null;
	public String consentName = null;
	public String dateSigned = null;
	public String signedBy= null;
	public String entrolled=null;
	public String entrolledDate= null;
	
	public String expirationDate=null;
	public String inactivation = null;
	public String service=null;
	public String department=null;
	public String program=null;
	public String fromdate=null;
	public String todate = null;
	public String fromdateCA=null;
	public String todateCA = null;
	public String priorstate=null;
	public String outcome=null;
	
	public String race=null;
	public String ethnicity=null;
	public String religion=null;
	public String citizenship=null;
	public String countryPanel=null;
	public String languagePanel=null;
	public String arrivalDate=null;
	public String arrivalDateCA=null;
	public String languagespoken=null;
	public String interpreterrequired=null;
	public String interpreter=null;
	public String parentEthnicityPanel=null;
	public String livingArrangement=null;
	public String livingType=null;
	public String studentStatus=null;
	public String educationLevel=null;
	public String householdIncome=null;
	public String numPeopleText=null;
	public String householdComposition=null;
	public String homelessIndicatorCheck=null;
	public String homelessStatus=null;
	public String ssi=null;
	public String employmentStatus=null;
	public String comments1=null;
	public String officialLanguage=null;
	
	public String occupation=null;
	public String jobCode=null;
	public String ageGroupIndicator=null;
	public String view=null;
    public String pageData=null;
	
	public String notedate = null;
	public String notedateCA = null;
	public String category = null;
	public String patientnote = null;
	public String followup = null;
	public String notedate1 = null;
	public String patientnote1 = null;
	public String followup1 = null;
	
	
	public String group=null;
	public String type=null;
	public String typeCA=null;
	public String value=null;
	public String expirationdate=null;
	
	public String searchpatient=null;
	public String description=null;
	public String program1=null;
	public String reason=null;
	public String referral=null;
	public String icdcode = null;
	public String string=null;
	public String startdate1=null;
	public String casesstatus=null;
	public String datetype1=null;
	public String date1=null;
	public String datetype2=null;
	public String date2=null;
	public String searchName = null;
	public String terminationDate=null;
	public String terminationReason=null;
	
	public String refType=null;
	public String refBy=null;
	public String refBy1=null;
	public String addr=null;
	public String addr1=null;
	public String refTo=null;
	public String refToAddress=null;
	public String practiceName=null;
	public String diagCode=null;
	public String referralReason=null;
	public String referralDate=null;
	public String referralEndDate=null;
	public String refComments=null;
	public String speciality=null;
	public String specialityCA=null;
	public String payer = null;
	public String numVisits1=null;
	public String numVisitType=null;
	public String requestDate2=null;
	public String approvalDate2=null;
	public String authorizationNum2=null;
	public String numAuthorizedVisits2=null;
	public String startDate2=null;
	public String endDate2=null;
	public String cptSuggestBox2=null;
	public String addrCA=null;
	public String addr1CA=null;
	
	public String teamName=null;
	public String itemCheckBox=null;
	public String itemCheckBox1=null;
	public String pcpCheckbox=null;
	public String teamLead = null;
	public String teamMember=null;
	public String role = null;
	public String duration1=null;
	public String endDate=null;
	public String endDateCA=null;
	public String endDate1=null;
	public String endNumber = null;
	public String timeperiod=null;
	public String timeperiod1=null;
	public String location = null;
	public String location1 = null;
	public String specialty=null;
	public String reasonForDelete=null;
	public String reasonForDeleteCA=null;
	public String specialtyValue=null;
	
	public String patientRadio=null;
	public String providerRadio=null;
	public String idGroup=null;
	public String idType=null;
	public String typeDescription=null;
	public String freeTextRadio=null;
	public String definedListRadio=null;
	public String idTypeMask=null;
	public String typerestrictionLevel=null;
	public String expDate=null;
	public String typeDefault=null;
	public String restricted=null;
	public String typeStatus=null;
	public String identifier=null;
	public String providers=null;
	
	public String groupName=null;
	public String groupNo=null;
	public String groupDescription=null;
	
	public String guarantor=null;
	public String eContact=null;
	public String guardian = null;
	public String sdMarker=null;
	public String other = null;
	public String groupFor=null;
	
	public String referringCode=null;
	public String taxonomyCode=null;
	public String practiceName1=null;
	public String epstreet11=null;
	public String epstreet12=null;
	public String epcity1=null;
	public String epstate1=null;
	public String epzipcode1=null;
	public String zipcodeCA=null;
	public String epcountry1=null;
	public String epstate1CA=null;
	public String location1CA=null;
	public String contactLevel=null;
	public String contactCompany=null;
	public String salutation=null;
	public String jobTitle=null;
	public String primaryPhoneExtn1=null;
	public String primaryPhoneNumber1=null;
	public String address1=null;
	public String address2=null;
	public String city=null;
	public String state=null;
	public String zipcode=null;
	public String webAddress=null;
	
	public String currentPassword=null;
	public String newPassword=null;
	public String newConfirmPassword=null;
	
	public String filter = null;
	public String filterActivity = null;
	public String user=null;
	public String practice = null;
	public String patientName=null;
	public String section=null;
	public String action=null;
	public String programId=null;
	public String departmentId=null;
	public String startdate=null;
	public String enddate1=null;
	public String outcome1=null;
	public String priorstate1=null;
	public String created=null;
	public String createdby=null;
	public String lastUpdate=null;
	public String ipAddress=null;
	public String externalEmr=null;
	public String credentials=null;
	public String resetPassword=null;
	public String changedPassword=null;
	public String userName1=null;
	public String resetPswCheck=null;
	public String sectionFilter=null;
	
	public String refFrom=null;
	public String referredTo=null;
	public String refDate=null;
	public String refDateCA=null;

	public String groupDefault=null;
	public String roleType=null;
	public String reasonForDeleteType=null;
	public String expirationdate1=null;
	
	public String notesType=null;
	public String notesValue=null;
	public String notesType1=null;
	public String notesValue1=null;
	
	public String deleteValue=null;
	public String global=null;
	public String notes=null;
	public String name = null;
	public String role1=null;
	
	public String password1=null;
	public String patientNote=null;
	
	public String consentValue=null;
	public String consentValue1=null;
	public String consentType1=null;
	
	public String validFor=null;
	public String validForType=null;
	public String restrictionLevel=null;
	
	public String status1=null;
	public String status2=null;
	public String userPassword1=null;
	
	public String switchRole=null;
	public String password=null;
	public String practise=null;
	
	public String variableType=null;
	public String variableValue=null;
	
	public String prescribe=null;
	public String prescribeName=null;
	public String provider=null;
	public String provider1=null;
	public String loaction=null;
	public String freeText=null;
	public String direction=null;
	public String increaseDecreaseDose=null;
	public String refillMethod=null;
	public String refillQuantity=null;
	public String refillUnit=null;
	public String refillRoute=null;
	public String refillFrequency=null;
	public String refillUsage=null;
	public String usage=null;
	//public String duration=null;
	public String refillUsage1=null;
	public String refillUsage2=null;
	public String refillUsage3=null;
	public String multipleDirection=null;
	public String refillduration=null;
	public String method=null;
	public String quality=null;
	public String unit=null;
	public String route=null;
	public String frequency=null;
	public String dispense=null;
	public String unitList=null;
	

	public String startDate=null;
	public String supply=null;
	public String refillUsage4=null;
	public String prescribeOn=null;
	public String refill=null;
	public String prescribedby=null;
	public String lastRefill=null;
	public String date=null;
	public String comment=null;
	public String eligibilityStatus=null;
	
	public String coPay=null;
	public String specialistCoPay=null;
	public String deductible=null;
	public String coInsurance=null;

	public String  typeofCoverage =null;
	public String  billingAddr1 =null;
	public String  billingAddr2 =null;
	public String  billingCity =null;
	public String  billingZip =null;
	public String billingState =null;
	public String  billingCountry=null;
	public String  billingCityCA =null;
	public String  billingZipCA =null;
	public String billingStateCA =null;
	public String  billingCountryCA=null;
	public String payerName = null;
	public String payerCode = null;
	public String relationshipStatus = null;
	public String releaseInformation = null;
	public String dobCA = null;
	public String telNum2 = null;
	public String telNum1 = null;
	public String planName = null;
	
	public String newSeriesStartDate = null;
	public String newSeriesEndDate = null;
	public String defaultEndDateUS = null;
	public String defaultEndDateCA = null;
	
	
	
	
	
	//public String role=null;
	
	public String workSheetName = null;
	public String workBookName = "TestData_Home.xls";		
	public String sectionName = "home";
	
	public Hashtable<String, Integer> excelHeaders = new Hashtable<String, Integer>();
	public Hashtable<String, Integer> excelrRowColumnCount = new Hashtable<String, Integer>();
	
	
		public String toString() {
        StringBuffer listOfValues  = new StringBuffer();
        @SuppressWarnings("rawtypes")
		Class cls = this.getClass();
        Field[] fields = cls.getDeclaredFields( );

        Field field = null;
        try {
            for (int i=0; i < fields.length; i++) {
                field = fields[i];
                Object subObj = field.get(this);
                if (subObj != null && !field.getName().equals("logger") ) {
                    listOfValues.append(":");
                    listOfValues.append(field.getName());
                    listOfValues.append("=");
                    listOfValues.append(subObj.toString());
                }
            }
        }
        catch (RuntimeException e) {
            Assert.fail("toString",e);
        } catch (IllegalAccessException e) {
        	Assert.fail("Error During Execution; Execution Failed More detaisl " + e);
		}   
        return listOfValues.toString();
    }

    
	/**
	 * fetchCodingInterfaceTestData
	 * function for fetching Test data based on test case id  
	 * @since  	     Apr 30, 2010	  
	 */
	public boolean fetchHomeTestData(){
		
		ReadFromExcel readTestData = new ReadFromExcel();
		boolean isDataFound = false;
		testCaseId = testCaseId != null ? testCaseId.trim() : "";
		
		try{
			  //******************************************************************//
			  //Fetching the test data for New Clinical Interface
			  //******************************************************************//

			HSSFSheet sheet = null;
			// function call to initiate a connection to an excel sheet
			sheet = readTestData.initiateExcelConnectionNexia(workSheetName, sectionName, workBookName); 

			// function to find number of rows and columns
			excelrRowColumnCount = readTestData.findRowColumnCount(sheet, excelrRowColumnCount);
			
			// function call to find excel header fields
			excelHeaders = readTestData.readExcelHeaders(sheet, excelHeaders, excelrRowColumnCount);

			HSSFRow row = null;
			HSSFCell cell = null;			
			String temptestCaseId = null;

			for(int r = 0; r < excelrRowColumnCount.get("RowCount"); r++) {
				row = sheet.getRow(r);  
				if(row != null) {
					for(int c = 0; c < excelrRowColumnCount.get("ColumnCount"); ) {						
						cell = row.getCell(excelHeaders.get("TestID"));
						if(cell != null){
							temptestCaseId = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TestID")));
							if(temptestCaseId.equals(testCaseId)){
								isDataFound = true;
								if(workSheetName.equalsIgnoreCase("Login" )){									
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									break;
									}
								else if(workSheetName.equalsIgnoreCase("NewPatientCheckIn" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password"))); 
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
                                    idchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Idchart")));
                                    primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
                                    responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
                                    pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
                                    lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
                                    firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
                                    middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
                                    title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
                                    suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
                                    alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									dobCa=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOBCA")));
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
                                    residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
									residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State")));									
									residentialAddrstateCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StateCA")));
									residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));									
									residentialAddrzipCodeCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCodeCA")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));									
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));									
									telephoneType4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType4")));
									telephoneNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum4")));
									teleno4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNo4")));
									telephoneextnNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum4")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									contactPreferences1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences1")));
									contactPreferences2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences2")));
									contactPreferences3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences3")));
									contactPreferences4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences4")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
									mailingAddressState1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
									teleNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNo1")));
									teleNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNo2")));
									teleNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNo3")));
									teleNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNo4")));
									break;
                                  }else if(workSheetName.equalsIgnoreCase("CreateNewContact" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
									CAPatientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CAPatientID")));
									householdName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Household Name")));
									//contactType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Contact Type")));
                                    relationship =readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Relationship")));
									title= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title")));
									lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Last name")));
									firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("First name")));
									suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("E-mail")));
									languageSpoken=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Language")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
									residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address1")));
									residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State")));
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrstateCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StateCA")));
									residentialAddrzipCodeCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCodeCA")));
									residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									country= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Primary Phone Type")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Primary Phone Number")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Primary Phone Extn")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Secondary Phone Type")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Secondary Phone Number")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Secondary Phone Extn")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Tertiary Phone Type")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Tertiary Phone Number")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Tertiary Phone Extn")));
									break;
								}else if(workSheetName.equalsIgnoreCase("DuplicateContact" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
									householdName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Household Name")));
									guarantor=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Guarantor")));
									eContact=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Econtact")));
									guardian=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Guardian")));
									sdMarker=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SdMarker")));
									other=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("other")));
									relationship =readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Relationship")));
									title= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title")));
									lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Last name")));
									firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("First name")));
									suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("E-mail")));
									languageSpoken=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Language")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
									residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address1")));
									residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State")));
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									country= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Primary Phone Type")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Primary Phone Number")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Primary Phone Extn")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Secondary Phone Type")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Secondary Phone Number")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Secondary Phone Extn")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Tertiary Phone Type")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Tertiary Phone Number")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Tertiary Phone Extn")));
									break;
								}else if(workSheetName.equalsIgnoreCase("NewConsent" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
									consentType= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ConsentType")));
									consentName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ConsentName")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("status")));
									inactivation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason for inactivation")));
									dateSigned=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DateSigned")));
									signedBy=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SignedBy")));
									firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
									lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
									relationship =readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("relationship")));
									break;
								}else if(workSheetName.equalsIgnoreCase("ConsentsEnterPrise" )){
									consentValue=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ConsentValue")));
									consentType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ConsentType")));
									consentType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ConsentType1")));
									break;
								}else if(workSheetName.equalsIgnoreCase("SSConsents" )){
									consentType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ConsentType")));
									consentName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ConsentName")));
									validFor=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ValidFor")));
									validForType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ValidForType")));
									restrictionLevel=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("restrictionLevel")));
									break;
								}else if(workSheetName.equalsIgnoreCase("CreateReferral" )){
									userAccount=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
									refType= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referral Type")));
									refBy=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referred By")));
									refBy1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefBy")));
									practiceName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PracticeName")));
									addr=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address")));
									addr1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address1")));
									refTo=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referred To")));
									refToAddress=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referred To Add")));									
									speciality=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Speciality")));
									specialityCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SpecialityCA")));
									diagCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Diagnosis Code")));
									referralReason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referral Reason")));
									referralDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referral Start Date")));
									referralEndDate= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referral End  Date")));
									refComments =readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
									payer=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Payer")));
									numVisits1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AllowedVisits")));
									numVisitType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Visit Type")));
									requestDate2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RequestDate")));
									approvalDate2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ApprovalDate")));
									authorizationNum2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Authorization")));
									numAuthorizedVisits2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Authr Visits")));
									startDate2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StartDate")));
									endDate2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EndDate")));
									cptSuggestBox2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Cpt1")));
									addrCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AddressCA")));
									addr1CA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address1CA")));
									break;
								}else if(workSheetName.equalsIgnoreCase("EditContact" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
									contactType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Contact Type")));
                                    relationship =readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Relationship")));
									title= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title")));
									lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Last name")));
									firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("First name")));
									suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Primary Phone Type")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Primary Phone Number")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Primary Phone Extn")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Secondary Phone Type")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Secondary Phone Number")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Secondary Phone Extn")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Tertiary Phone Type")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Tertiary Phone Number")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Tertiary Phone Extn")));
									residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address1")));
									residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State")));
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrzipCodeCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCodeCA")));
									country= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									country= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("E-mail")));
									languageSpoken=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Language")));
                                    break;
                                }else if (workSheetName.equalsIgnoreCase("EditHealthCareTeam")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    teamName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TeamName")));
                                    itemCheckBox=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ItemCheckBox")));
                                    itemCheckBox1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ItemCheckBox1")));
                                    pcpCheckbox=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PcpCheckbox")));
                                    teamLead=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TeamLead")));
                                    duration =readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
                                    duration1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration1")));
                                    role=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Role")));
                                    endDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EndDate")));
                                    endDateCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EndDateCA")));
                                    endDate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EndDate1")));
                                    endNumber=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EndNumber")));
                                    timeperiod=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Timeperiod")));
                                    timeperiod1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Timeperiod1")));
                                    location=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Location")));
                                    location1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Location1")));
                                    location1CA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Location1CA")));
                                    specialty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Specialty")));
                                    reasonForDelete=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForDelete")));
                                    
                                    break;
								}else if(workSheetName.equalsIgnoreCase("AdminHealthCare" )){
									global = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Global")));
									teamName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TeamName")));
									notes = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Notes")));
									name = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Name1")));
									role1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Role1")));
									break;
								}else if (workSheetName.equalsIgnoreCase("AdminHealthCareTeam")){
									roleType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RoleType")));
									role=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Role")));
									reasonForDeleteType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForDeleteType")));
                                    reasonForDelete=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForDelete")));
                                    reasonForDeleteCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForDeleteCA")));
                                    deleteValue=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DeleteValue")));
                                    reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
                                    specialtyValue=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SpecialtyValue")));
                                    specialty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Specialty")));
                                    break;
								}else if (workSheetName.equalsIgnoreCase("SearchHealthCareTeam")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    teamName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TeamName")));
                                    searchName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SearchName")));
                                    itemCheckBox=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ItemCheckBox")));
                                    itemCheckBox1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ItemCheckBox1")));
                                    pcpCheckbox=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PcpCheckbox")));
                                    teamLead=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TeamLead")));
                                    duration =readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
                                    duration1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration1")));
                                    role=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Role")));
                                    endDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EndDate")));
                                    endDate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EndDate1")));
                                    endNumber=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EndNumber")));
                                    timeperiod=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Timeperiod")));
                                    timeperiod1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Timeperiod1")));
                                    location=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Location")));
                                    location1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Location1")));
                                    location1CA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Location1CA")));
                                    specialty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Specialty")));
                                    reasonForDelete=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForDelete")));
                                    break;
								}else if(workSheetName.equalsIgnoreCase("EditPatientInfo")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    patientNote=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientNote")));
                                    patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
                                    primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
                                    responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
                                    pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
                                    lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
                                    firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
                                    middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
                                    title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
                                    suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
                                    alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
                                    residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
									residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State")));
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));									
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
                                    break;
								}else if (workSheetName.equalsIgnoreCase("NewProgram")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    department=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Department")));
                                    program=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Program")));
                                    fromdate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FromDate")));
                                    todate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ToDate")));
                                    fromdateCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FromDateCA")));
                                    todateCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ToDateCA")));
                                    priorstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PriorState")));
                                    outcome=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Outcome")));
                                    refFrom=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReferralSource")));
                                    referredTo=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReferredTo")));
                                    refDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReferralDate")));
                                    refDateCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReferralDateCA")));
                                    program1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Program1")));
                                    break;
				                 }else if (workSheetName.equalsIgnoreCase("EditProgram")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    department=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Department")));
                                    program=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Program")));
                                    fromdate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FromDate")));
                                    todate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ToDate")));
                                    priorstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PriorState")));
                                    outcome=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Outcome")));
				                    break;
				                  }else if (workSheetName.equalsIgnoreCase("NewSocioEconomic")){
				                	userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
	                                userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
	                                userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
	                                switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
	                                patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
	                                race=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Race")));
                                    ethnicity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Ethnicity")));
                                    religion=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Religion")));
                                    citizenship=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Citizenship")));
                                    countryPanel=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CountryPanel")));
                                    languagePanel=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LanguagePanel")));
                                    arrivalDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ArrivalDate")));
                                    arrivalDateCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ArrivalDateCA")));
                                    languagespoken=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Languagespoken")));
                                    interpreterrequired=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Interpreterrequired")));
                                    interpreter=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Interpreter")));
                                    parentEthnicityPanel=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ParentEthnicityPanel")));
                                    livingArrangement=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LivingArrangement")));
                                    studentStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StudentStatus")));
                                    educationLevel=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EducationLevel")));
                                    householdIncome=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HouseholdIncome")));
                                    numPeopleText=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NumberOfPeople")));
                                    householdComposition=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HouseholdComposition")));
                                    homelessIndicatorCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HomelessIndicatorCheck")));
                                    homelessStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HomelessStatus")));
                                    ssi=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Ssi")));
                                    employmentStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EmploymentStatus")));
                                    comments1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CommentsForSE")));
				                    break;
				               }else if (workSheetName.equalsIgnoreCase("AdminSocio")){
									livingType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LivingType")));
									livingArrangement=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LivingArrangement")));
									break;
				               }else if(workSheetName.equalsIgnoreCase("createNewNote")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    notedate = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NoteDate")));
                                    notedateCA = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NoteDateCA")));
                                    category=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Category")));
                                    patientnote=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientNote")));
                                    followup=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Followup")));
                                    break;
								}else if(workSheetName.equalsIgnoreCase("EditNote")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    notedate = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NoteDate")));
                                    notedateCA = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NoteDateCA")));
                                    category=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Category")));
                                    patientnote=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientNote")));
                                    followup=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Followup")));
                                    break;
								}else if (workSheetName.equalsIgnoreCase("EnterpriseVariables")){
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									variableType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("VariableType")));
									variableValue=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("VariableValue")));
									break;
								}else if(workSheetName.equalsIgnoreCase("CreateIdentifiers")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    group = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Group")));
                                    type = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Type")));
                                    typeCA = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TypeCA")));
                                    value=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Value")));
                                    expirationdate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Expiration Date")));
                                    break;
								}else if(workSheetName.equalsIgnoreCase("IdentifiersAdmin")){
									patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
									groupFor=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("GroupFor")));
									groupName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("GroupName")));
									groupDescription=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Description")));
									groupDefault=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Default")));
									groupFor=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("GroupFor")));
									idGroup=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IdGroup")));
									idType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IdType")));
									typeDescription=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Description")));
									freeTextRadio=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FreeTextRadio")));
									definedListRadio=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DefinedListRadio")));
									identifier=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Identifier")));
									idTypeMask=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IdTypeMask")));
									expDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExpDate")));
									typeDefault=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TypeDefault")));
									restricted=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Restricted")));
									typeStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									value=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Value")));
									expirationdate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Expiration Date")));
                                    break;

								}else if(workSheetName.equalsIgnoreCase("NewHousehold")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    searchpatient=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SearchPatient")));
                                    break;
								}else if(workSheetName.equalsIgnoreCase("ICDCodeInCase")){
									referral=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referral")));
									referralDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReferralDate")));
                                    icdcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Icdcode")));
                                    terminationDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TerminationDate")));
                                    terminationReason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TerminationReason")));
                                    break;
								}else if (workSheetName.equalsIgnoreCase("NewCases")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    description=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Description")));
                                    program=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Program")));
                                    program1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Program1")));
                                    department=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Department")));
                                    reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
                                    referral=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referral")));
                                    icdcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Icecode")));
                                    startdate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StartDate")));
                                    startdate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StartDate1")));
                                    datetype1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DateType1")));
                                    date1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Date1")));
                                    datetype1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DateType2")));
                                    date1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Date2")));
                                    casesstatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("caseStatus")));
                                    terminationDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TerminationDate")));
                                    terminationReason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TerminationReason")));
                                    break;

                                }else if (workSheetName.equalsIgnoreCase("EditCases")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    description=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Description")));
                                    program=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Program")));
                                    department=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Department")));
                                    reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
                                    referral=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Referral")));
                                    icdcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Icecode")));
                                    startdate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StartDate")));
                                    casesstatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Casesstatus")));
                                    terminationDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TerminationDate")));
                                    terminationReason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TerminationReason")));
                                    datetype1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DateType1")));
                                    date1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Date1")));
                                    datetype2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DateType2")));
                                    date2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Date2")));
                                    break;
								}else if(workSheetName.equalsIgnoreCase("CreateIdentifiersType" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									groupFor=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("GroupFor")));
									idGroup=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IdGroup")));
									idType=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IdType")));
									typeDescription=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Description")));
									freeTextRadio=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FreeTextRadio")));
									definedListRadio=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DefinedListRadio")));
									identifier=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Identifier")));
									idTypeMask=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IdTypeMask")));
									expDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExpDate")));
									typeDefault=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Default")));
									restricted=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Restricted")));
									typeStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									groupDescription=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("GroupDescription")));
									break;
								}else if(workSheetName.equalsIgnoreCase("MySettings" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
									firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
									userName1 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName1")));
									credentials = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Credentials")));
									externalEmr = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExternalEMR")));
									password = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password1")));
									role= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserRole")));
									practise=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Practise")));
									newPassword=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewPassword")));
									newConfirmPassword=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewConfirmPassword")));
									break;
								}else if(workSheetName.equalsIgnoreCase("CreateExternalProviders" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									referringCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReferringCode")));
									lastName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
									firstName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
									specialty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Specialty")));
									epstreet11=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Street11")));
									epstreet12=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Street12")));
									epcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City1")));
									epstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State1")));
									epzipcode1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode1")));
									zipcodeCA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCodeCA")));
									epcountry1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country1")));
									epstate1CA=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State1CA")));
									break;
								}else if(workSheetName.equalsIgnoreCase("CreatePatientForMedication")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									patientId = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientId")));
									canadianProvince=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CanadianProvince")));									//canadianProvince=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CanadianProvince")));
	                                hCN=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HCN")));
	                                newBornCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewBornCheck")));
	                                reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
	                                expireDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExpireDate")));
	                                patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
	                                idchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Idchart")));
	                                primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
	                                responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
	                                pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
	                                lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
	                                firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
	                                middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
	                                title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
	                                suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
	                                alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
	                                residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
	                                residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									/*residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));*/
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));									
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
									/*mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));*/
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
									patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
									prescribe = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Prescribe")));
									freeText = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FreeText")));
									direction = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Direction")));
									increaseDecreaseDose = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IncreaseDecreaseDose")));
									refillMethod = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillMethod")));
									refillQuantity = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillQuantity")));
									refillUnit = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillUnit")));
									refillRoute = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillRoute")));
									refillFrequency = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillFrequency")));
									refillUsage = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillUsage")));
									usage = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Usage")));
									duration = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									refillUsage1 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillUsage1")));
									refillUsage2 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillUsage2")));
									refillUsage3 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillUsage3")));
									multipleDirection = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MultipleDirection")));
									refillduration = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Refillduration")));
									method = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Method")));
									quality = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Quality")));
									unit = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Unit")));
							         lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
									route = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Route")));
									frequency = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Frequency")));
									startDate= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StartDate")));
									supply= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Supply")));
									refillUsage4= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RefillUsage4")));
									prescribeOn= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrescribeOn")));
									refill= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Refill")));
									prescribedby= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Prescribedby")));
									lastRefill= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastRefill")));
									comment= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comment")));
									//startDate1= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StartDate1")));
									//addby= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addby")));
									prescribeName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrescribeName")));
									//concentration=	readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Concentation")));
									break;
								}else if(workSheetName.equalsIgnoreCase("CreateAddressBook")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    contactLevel = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Contact Level")));
                                    contactType = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Contact Type")));
                                    lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Last Name")));
                                    firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("First Name")));
                                    department = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Department")));
                                    address1 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address1")));
                                    address2 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Address2")));
                                    city = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City")));
                                    zipcode = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
                                    zipcodeCA = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCodeCA")));
                                    contactCompany=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("contactCompany")));
                                    break;
								}else if(workSheetName.equalsIgnoreCase("AuditLogForUser")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    filterActivity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FilterActivity")));
                                    filter=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Filter")));
                                    user=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("User")));
                                    practice=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Practice")));
                                    ipAddress=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IpAddress")));
                                    patientName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientName")));
                                    section=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Section")));
                                    action=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Action")));
                                    resetPassword=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PasswordField")));
                                    break;
								}else if(workSheetName.equalsIgnoreCase("AuditLogForSocioEconomic")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    filterActivity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FilterActivity")));
                                    filter=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Filter")));
                                    sectionFilter=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SectionFilter")));
                                    user=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("User")));
                                    practice=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Practice")));
                                    ipAddress=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IpAddress")));
                                    patientName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientName")));
                                    patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
                                    section=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Section")));
                                    action=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Action")));
                                    break;
								}
								else if(workSheetName.equalsIgnoreCase("AuditLogForSystemAccess")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    filterActivity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FilterActivity")));
                                    filter=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Filter")));
                                    user=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("User")));
                                    practice=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Practice")));
                                    ipAddress=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("IpAddress")));
                                    patientName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientName")));
                                    section=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Section")));
                                    action=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Action")));
                                    break;
								}else if (workSheetName.equalsIgnoreCase("SocioEconomicCAView")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
	                                userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
	                                userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
	                                switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
	                                patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
	                                race=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Race")));
                                    ethnicity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Ethnicity")));
                                    religion=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Religion")));
                                    citizenship=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Citizenship")));
                                    countryPanel=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CountryPanel")));
                                    languagePanel=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LanguagePanel")));
                                    arrivalDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ArrivalDate")));
                                    officialLanguage=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Official Language")));
                                    languagespoken=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Languagespoken")));
                                    secondlanguagespoken=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SecondLanguagespoken")));
                                    interpreterrequired=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Interpreterrequired")));
                                    interpreter=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Interpreter")));
                                    service=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Type of Service")));
                                    parentEthnicityPanel=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ParentEthnicityPanel")));
                                    livingArrangement=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LivingArrangement")));
                                    studentStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StudentStatus")));
                                    educationLevel=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EducationLevel")));
                                    householdIncome=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HouseholdIncome")));
                                    numPeopleText=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NumberOfPeople")));
                                    householdComposition=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HouseholdComposition")));
                                    homelessIndicatorCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HomelessIndicatorCheck")));
                                    homelessStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HomelessStatus")));
                                    ageGroupIndicator=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Age Group Indicator")));
                                    jobCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Job Code")));
                                    occupation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Occupation")));
                                    employmentStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EmploymentStatus")));
                                    comments1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CommentsForSE")));
				                    break;
				                }else if(workSheetName.equalsIgnoreCase("NewPatientCheckInCAView" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
	                                userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
	                                userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password"))); 
	                                switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
	                                rosteredCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RosteredCheck")));
	                                canadianProvince=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CanadianProvince")));
	                                hCN=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HCN")));
	                                newBornCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewBornCheck")));
	                                reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
	                                expireDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExpireDate")));
	                                patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
	                                idchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Idchart")));
	                                primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
	                                responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
	                                pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
	                                lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
	                                firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
	                                middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
	                                title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
	                                suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
	                                alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
	                                residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
	                                residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									/*residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));*/
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));
									telephoneNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNo4")));
									telephoneextnNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum4")));
									teleno4 =readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNo4")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									contactPreferences1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences1")));
									contactPreferences2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences2")));
									contactPreferences3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences3")));
									contactPreferences4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences4")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
									/*mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));*/
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
	                                break; }  
				                    else if(workSheetName.equalsIgnoreCase("PatientDataCAView" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
		                            userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
		                            userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password"))); 
		                            switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
		                            rosteredCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RosteredCheck")));
		                            canadianProvince=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CanadianProvince")));
		                            hCN=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HCN")));
		                            newBornCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewBornCheck")));
		                            reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
		                            expireDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExpireDate")));
		                            patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
		                            idchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Idchart")));
		                            primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
		                            responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
		                            pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
		                            lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
		                            firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
		                            middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
		                            title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
		                            suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
		                            alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
		                            residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
		                            residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									/*residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));*/
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
									/*mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));*/
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
		                            break; }  
				                    else if(workSheetName.equalsIgnoreCase("PatientDataCAViewSmoke" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
		                            userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
		                            userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password"))); 
		                            switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
		                            rosteredCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RosteredCheck")));
		                            canadianProvince=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CanadianProvince")));
		                            hCN=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HCN")));
		                            newBornCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewBornCheck")));
		                            reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
		                            expireDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExpireDate")));
		                            patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
		                            idchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Idchart")));
		                            primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
		                            responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
		                            pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
		                            lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
		                            firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
		                            middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
		                            title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
		                            suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
		                            alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
		                            residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
		                            residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									/*residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));*/
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
									/*mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));*/
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
		                            break; }
				                    else if(workSheetName.equalsIgnoreCase("PatientDataCAViewADV" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
			                        userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
			                        userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password"))); 
			                        switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
			                        rosteredCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RosteredCheck")));
			                        canadianProvince=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CanadianProvince")));
			                        hCN=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HCN")));
			                        newBornCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewBornCheck")));
			                        reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
			                        expireDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExpireDate")));
			                        patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
			                        idchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Idchart")));
			                        primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
			                        responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
			                        pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
			                        lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
			                        firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
			                        middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
			                        title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
			                        suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
			                        alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
			                        residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
			                        residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									/*residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));*/
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
									/*mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));*/
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
			                        break; }
		                            else if(workSheetName.equalsIgnoreCase("PatientData")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password"))); 
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
                                    idchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Idchart")));
                                    primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
                                    responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
                                    pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
                                    lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
                                    firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
                                    middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
                                    title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
                                    suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
                                    alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
                                    residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
									residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State")));
									residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));									
									telephoneType4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType4")));
									telephoneNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum4")));
									telephoneextnNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum4")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									contactPreferences1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences1")));
									contactPreferences2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences2")));
									contactPreferences3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences3")));
									contactPreferences4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences4")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
									pageData=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PageData")));
                                    break; }   
		                            else if(workSheetName.equalsIgnoreCase("PatientDataSmoke" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password"))); 
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
                                    idchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Idchart")));
                                    primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
                                    responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
                                    pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
                                    lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
                                    firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
                                    middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
                                    title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
                                    suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
                                    alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
                                    residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
									residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State")));
									residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));									
									telephoneType4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType4")));
									telephoneNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum4")));
									telephoneextnNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum4")));
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									contactPreferences1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences1")));
									contactPreferences2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences2")));
									contactPreferences3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences3")));
									contactPreferences4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences4")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
                                    break; } 
                                    else if(workSheetName.equalsIgnoreCase("PatientDataADV" )){
  									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
                                    userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
                                    userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password"))); 
                                    switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
                                    patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
                                    idchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Idchart")));
                                    primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
                                    responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
                                    pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
                                    lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
                                    firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
                                    middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
                                    title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
                                    suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
                                    alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
  									alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
  									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
  									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
  									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
  									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
  									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
  									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
  									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
  									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
  									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
  									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
                                      residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
  									residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
  									residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("City")));
  									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("State")));
  									residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
  									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
  									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
  									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
  									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
  									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
  									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
  									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
  									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
  									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
  									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
  									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
  									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
  									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));									
  									telephoneType4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType4")));
  									telephoneNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum4")));
  									telephoneextnNo4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum4")));
  									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
  									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
  									contactPreferences1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences1")));
  									contactPreferences2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences2")));
  									contactPreferences3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences3")));
  									contactPreferences4=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences4")));
  									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
  									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
  									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
  									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
  									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
  									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
  									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));
  									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
  									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
  									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
  									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
                                    break; }								    
                                    else if(workSheetName.equalsIgnoreCase("EditPatientCheckInCAView" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
		                            userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
		                            userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password"))); 
		                            switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
		                            patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
		                            rosteredCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RosteredCheck")));
		                            canadianProvince=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CanadianProvince")));
		                            hCN=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("HCN")));
		                            newBornCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewBornCheck")));
		                            reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
		                            expireDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExpireDate")));
		                            patientIdchart = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientIdchart")));
		                            primaryLocation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrimaryLocation")));	
		                            responsibleProvider=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResponsibleProvider")));
		                            pcpCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PCPCheck")));
		                            lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
		                            firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
		                            middleName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MiddleName")));
		                            title=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Title"))); 
		                            suffix=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Suffix")));
		                            alias1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias1")));
		                            alias2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Alias2")));    
									dob=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));		
									estimatedCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EstimatedCheck")));		
									prematureCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PrematureCheck")));
									duration=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Duration")));
									measure=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Measure")));
									sex=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									maritalStatus=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MaritalStatus")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Status")));
									statusDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("StatusDate")));
									reasonForInactivation = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReasonForInactivation")));
		                            residentialAddrStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddrStreet1")));
		                            residentialAddrStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ResidentialAddr2Street2")));
		                            residentialAddrcity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));
									/*residentialAddrcity1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrcity")));
									residentialAddrstate1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Addrstate")));*/
									residentialAddrzipCode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ZipCode")));
									residentialAddrcountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Country")));
									county=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("County")));
									telephoneType1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType1")));
									telephoneNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telephoneextnNo1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum1")));
									telephoneType2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType2")));
									telephoneNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									telephoneextnNo2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum2")));
									telephoneType3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PhoneNoType3")));
									telephoneNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum3")));
									telephoneextnNo3=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExtnNum3")));									
									email=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("email")));
									contactPreferences=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ContactPreferences")));
									sameAsResidentialAddressCheck=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SameAsResidentialAddressCheck")));
									mailingAddressStreet1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet1")));
									mailingAddressStreet2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressStreet2")));
									mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressState")));
									/*mailingAddressCity=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingCity")));
									mailingAddressState=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingState")));*/
									mailingAddressZipcode=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressZipcode")));									
									mailingAddressCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCountry")));
									mailingAddressCounty=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MailingAddressCounty")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
		                            break;
		                          }else if(workSheetName.equalsIgnoreCase("AdminProgram" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									department=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Department")));
									program1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Program")));
									description=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Description")));
									break;
								}else if(workSheetName.equalsIgnoreCase("NewConsentCAView" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									patientID=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientID")));
									consentType= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ConsentType")));
									consentName=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ConsentName")));
									status=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("status")));
									inactivation=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason for inactivation")));
									dateSigned=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DateSigned")));
									signedBy=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SignedBy")));
									firstName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("FirstName")));
									lastName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("LastName")));
									relationship =readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("relationship")));
									entrolled=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Entrolled")));
									status1=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("status1")));
									status2=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("status2")));
									entrolledDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Entrolleddate")));
									endDate=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Enddate")));
									reason=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Reason")));
									comments=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comments")));
									break;

								}else if(workSheetName.equalsIgnoreCase("SearchPatient" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									searchpatient= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SearchPatient")));
									break;
                                }else if(workSheetName.equalsIgnoreCase("SwitchRole" )){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									role= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Role")));
									role1= readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Role1")));
									userName1 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName1")));
									userPassword1 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password1")));
									break;
								}else if(workSheetName.equalsIgnoreCase("VerifySecurityOption")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									patientId = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientId")));
									switchRole=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Role")));
									description=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Description")));
									view=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("View")));
									break;
								}else if(workSheetName.equalsIgnoreCase("AddPayers")){
									userAccount = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AccountNumber")));
									userName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("UserName")));
									userPassword = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Password")));
									switchRole = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SwitchRole")));
									payerName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PayerName")));
									payerCode = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PayerCode")));
									relationshipStatus = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("RelationshipStatus")));
									patientId = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PatientId")));
									anotherPatientId = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AnotherPatientId")));
									anotherPractice = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("AnotherPractice")));
									exceptionCode = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ExceptionCode")));
									sequenceId = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SequenceId")));
									secondaryReason = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SecondaryReason")));
									memberId = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("MemberId")));
									groupName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("GroupName")));
									groupNo = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("GroupNo")));
									typeofCoverage = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TypeofCoverage")));
									coPay=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CoPay")));
	                                specialistCoPay=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("SpecialistCoPay")));
	                                deductible=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Deductible")));
	                                coInsurance=readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("CoInsurance")));
									billingAddr1 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingAddr1")));
									billingAddr2 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingAddr2")));
									billingCity = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingCity")));
									billingZip = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingZip")));
									billingState = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingState")));
									billingCountry = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingCountry")));
									billingCityCA = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingCityCA")));	
									billingZipCA = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingZipCA")));
									billingStateCA = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingStateCA")));
									billingCountryCA = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("BillingCountryCA")));
									dobCA = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOBCA")));
									dob = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DOB")));
									sex = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Sex")));
									telNum1 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum1")));
									telNum2 = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("TelNum2")));
									planName = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("PlanName")));
									comment = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("Comment")));
									eligibilityStatus = readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("EligibilityStatus")));
									releaseInformation =  readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("ReleaseInformation")));
									newSeriesStartDate =  readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewSeriesStartDate")));
									newSeriesEndDate =  readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("NewSeriesEndDate")));
									defaultEndDateUS =  readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DefaultEndDateUS")));
									defaultEndDateCA =  readTestData.convertHSSFCellToString(row.getCell(excelHeaders.get("DefaultEndDateCA")));
									
									break;
								}else {
									break;
								}
							}else {
								break;
							}							
						}else {
							break;
						}
					}
				}
				if(isDataFound){					
					break;
				}
			}
			if(!isDataFound){
				Assert.fail("\nTest Data not found in test data sheet for Test Case Id  : " + testCaseId);
			}
		}catch (RuntimeException e) {
			Assert.fail("Error During Execution; Execution Failed More detaisl " + e);
			e.printStackTrace();
		}
		return isDataFound;
	}
}

